Part1-SDET Essentials | Jenkins Build & Delivery Pipeline | CI & CD | How to create Jenkins Pipeline

file:///C:/ProgramData/Jenkins/.jenkins/secrets/initialAdminPassword
2f1194e9919d436c983f01de6d9bfc7e
sdbhosale - 110917f53b3f79c62ea4f9f85386c52cf6
---
http://localhost:8080/
admin
Jenkins@8080
---
How to setup build pipeline in jenkins :
Step 1: Chain required jobs in sequence add upstream/downstream jobs
step 2: Install Build Pipeline Plugin
Step 3 : Add
	 Build Pipeline View
	 Configure the view step
Step 4:  Run and validate
---
SampleBuildJob
Freestyle Project
Execute shell
date
echo "Build job successfully Excuted! Done..."
apply and save.
---
SampleDeployJob
Freestyle project
Ok button
Build section -> Execute shell
date
echo "Deploy job successfully Excuted! Done..."
apply 
ok
---
SampleTestJob
Freestyle project
Ok button
Build section -> Execute shell
date
echo "Test job successfully Excuted! Done..."
apply 
ok
---
SampleReleaseJob
Freestyle project
Ok button
Build section -> Execute shell
date
echo "Release job successfully Excuted! Done..."
apply 
ok
---
Creating a chain : BDTR - {Build->Deploy->Test->Release}
Build after other projects are built?
select previous jobs and process further.
---
Install 'Build Pipeline Pluggin'
---
Above plugin will help to crate pipeline
+ icon
TestBuildPipeline

---
You're running Jenkins on Windows, so you should use "Execute Windows batch command" instead of "Execute shell".

ðŸ›  Fix:
Go to your Jenkins Job Configuration.

Scroll down to the Build section.

Remove the "Execute shell" build step.

Add a new build step:
ðŸ‘‰ "Execute Windows batch command".

Enter your script in batch format:

bat Copy Edit
@echo off
date /T
echo Build job successfully Executed! Done...
---
@echo off
date /T
echo Deploy job successfully Executed! Done...
---
@echo off
date /T
echo Test job successfully Executed! Done...
---
@echo off
date /T
echo Release job successfully Executed! Done...
---
Creating Delivery Pipeline
TestDeliveryPipeline
---------------------------------------------------------------------
Part2-SDET Essentials|CI & CD|How to Build Pipelines with Groovy Script|Scripted & Declarative
Using Groovy Script
2 ways:
1. Pipeline Script -> scripted pipeline
2. Pipeline Script from SCM (Source Code Managemnet) -> declarative pipeline
---
1. Pipeline Script -> scripted pipeline
node {
	stage('Build')
	{	
		echo "Building the Project..."
	}
	stage('Deploy')
	{	
		echo "Deploying the Project..."
	}
	stage('Test')
	{	
		echo "Testing the Project..."
	}
	stage('Release')
	{	
		echo "Releasing the Project..."
	}
}
---
Console OUTPUT in jenkins :
Started by user Sachin Bhosale

[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins
 in C:\ProgramData\Jenkins\.jenkins\workspace\ScriptedPipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] echo
Building the Project...
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] echo
Deploying the Project...
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] echo
Testing the Project...
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Release)
[Pipeline] echo
Releasing the Project...
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
---
jenkin file should be in SCM like github :
2. Pipeline Script from SCM (Source Code Managemnet) -> declarative pipeline
pipeline{
agent any
stages 
{
stage('Build') 
{
steps{
echo "Building the Project.........."
}
}
stage('Test') 
{
steps{
echo "Testing the Project.........."
}
}
stage('Deploy') 
{
steps{
echo "Deploying the Project.........."
}
}
}
}
---
Definition : Pipeline Script from SCM
SCM : Git
Repositories : https://github.com/iamsdbhosale/CI_CD_with_jenkins.git
Branches to build -> Branch Specifier (blank for 'any')? : */main
Script Path : jenkinsfile
Apply 
Save 
---
Console OUTPUT in jenkins:

Started by user Sachin Bhosale
Obtained jenkinsfile from git https://github.com/iamsdbhosale/CI_CD_with_jenkins.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\Declarative_scriptedPipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/iamsdbhosale/CI_CD_with_jenkins.git
 > git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\Declarative_scriptedPipeline # timeout=10
Fetching upstream changes from https://github.com/iamsdbhosale/CI_CD_with_jenkins.git
 > git.exe --version # timeout=10
 > git --version # 'git version 2.43.0.windows.1'
 > git.exe fetch --tags --force --progress -- https://github.com/iamsdbhosale/CI_CD_with_jenkins.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git.exe config remote.origin.url https://github.com/iamsdbhosale/CI_CD_with_jenkins.git # timeout=10
 > git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision 4ebb921b8a60c4d839d0389097103f36a8112034 (refs/remotes/origin/main)
 > git.exe config core.sparsecheckout # timeout=10
 > git.exe checkout -f 4ebb921b8a60c4d839d0389097103f36a8112034 # timeout=10
Commit message: "jenkins pipeline.txt file is added."
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] echo
Building the Project..........
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] echo
Deploying the Project..........
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] echo
Testing the Project..........
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Release)
[Pipeline] echo
Releasing the Project..........
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
---------------------------------------------------------------------
Ref. : {SDET- QA : @sdetpavan }
1. https://www.youtube.com/watch?v=1ji_9scA2C4
2. https://www.youtube.com/watch?v=Ozna0MS5D1E